# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

parameters:
  rust-version:
    type: string
    default: "1.90"

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  # backend
  backend build:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/configuration-reference/#executor-job
    docker:
      - image: rust:<<pipeline.parameters.rust-version>>
    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Cargo build"
          command: "cargo build"
          working_directory: "backend"
  backend lint:
    docker:
      - image: rust:<<pipeline.parameters.rust-version>>
    steps:
        - checkout
        - run:
            name: "Clippy check"
            command: |
              rustup component add clippy
              cargo clippy -- -Dwarnings
            working_directory: "backend"
  backend test:
    docker:
      - image: rust:<<pipeline.parameters.rust-version>>
    steps:
      - checkout
      - run:
          name: "Cargo test"
          command: "cargo test"
          working_directory: "backend"

  # frontend
  frontend lint:
    docker:
      - image: node:22.7.0
    steps:
      - checkout
      - run:
          name: Linting
          command: |
            npm install
            npm run lint
          working_directory: frontend
  frontend unit test:
    docker:
        - image: node:22.7.0
    steps:
      - checkout
      - run:
          name: Unit test
          command: |
            npm install
            npm run test:unit
          working_directory: frontend
  frontend type check:
    docker:
        - image: node:22.7.0
    steps:
      - checkout
      - run:
          name: Type check
          command: |
            npm install
            npm run type-check
          working_directory: frontend

  production build:
    docker:
      - image: cimg/base:2025.10
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run: docker build .

  deploy:
    docker:
      - image: cimg/base:2025.10
    steps:
      - checkout
      - run: sudo apt-get update && sudo apt-get install -y curl
      - run: curl -L https://fly.io/install.sh | sh
      - run: /home/circleci/.fly/bin/flyctl deploy --remote-only

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  test-and-deploy:
    jobs:
      - backend build
      - backend lint
      - backend test
      - frontend lint
      - frontend unit test
      - frontend type check
      - production build
      - deploy:
          requires:
            - backend build
            - backend lint
            - backend test
            - frontend lint
            - frontend unit test
            - frontend type check
            - production build
          filters:
            branches:
              only:
                - main
